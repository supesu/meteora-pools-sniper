syntax = "proto3";

package api.sniping.v1;

option go_package = "github.com/supesu/sniping-bot-v2/api/proto";

import "google/protobuf/timestamp.proto";

// SnipingService handles requests related to sniping operations
service SnipingService {
  // ProcessTransaction handles incoming transaction data from the scanner
  rpc ProcessTransaction(ProcessTransactionRequest) returns (ProcessTransactionResponse);

  // ProcessMeteoraEvent handles incoming Meteora pool events from the scanner
  rpc ProcessMeteoraEvent(ProcessMeteoraEventRequest) returns (ProcessMeteoraEventResponse);

  // GetTransactionHistory retrieves historical transaction data
  rpc GetTransactionHistory(GetTransactionHistoryRequest) returns (GetTransactionHistoryResponse);

  // GetMeteoraPoolHistory retrieves historical Meteora pool data
  rpc GetMeteoraPoolHistory(GetMeteoraPoolHistoryRequest) returns (GetMeteoraPoolHistoryResponse);

  // SubscribeToTransactions provides a stream of real-time transactions
  rpc SubscribeToTransactions(SubscribeRequest) returns (stream TransactionEvent);

  // SubscribeToMeteoraEvents provides a stream of real-time Meteora events
  rpc SubscribeToMeteoraEvents(SubscribeRequest) returns (stream MeteoraEvent);

  // GetHealthStatus returns the health status of the service
  rpc GetHealthStatus(HealthRequest) returns (HealthResponse);
}

// Transaction represents a Solana transaction
message Transaction {
  string signature = 1;
  string program_id = 2;
  repeated string accounts = 3;
  bytes data = 4;
  google.protobuf.Timestamp timestamp = 5;
  uint64 slot = 6;
  TransactionStatus status = 7;
  map<string, string> metadata = 8;
}

// TransactionStatus represents the status of a transaction
enum TransactionStatus {
  TRANSACTION_STATUS_UNKNOWN = 0;
  TRANSACTION_STATUS_PENDING = 1;
  TRANSACTION_STATUS_CONFIRMED = 2;
  TRANSACTION_STATUS_FINALIZED = 3;
  TRANSACTION_STATUS_FAILED = 4;
}

// ProcessTransactionRequest is sent by the scanner to the gRPC server
message ProcessTransactionRequest {
  Transaction transaction = 1;
  string scanner_id = 2;
}

// ProcessTransactionResponse is the response from processing a transaction
message ProcessTransactionResponse {
  bool success = 1;
  string message = 2;
  string transaction_id = 3;
}

// GetTransactionHistoryRequest requests historical transaction data
message GetTransactionHistoryRequest {
  string program_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  int32 limit = 4;
  string cursor = 5;
}

// GetTransactionHistoryResponse returns historical transaction data
message GetTransactionHistoryResponse {
  repeated Transaction transactions = 1;
  string next_cursor = 2;
  bool has_more = 3;
}

// SubscribeRequest for subscribing to transaction streams
message SubscribeRequest {
  repeated string program_ids = 1;
  string client_id = 2;
}

// TransactionEvent represents a real-time transaction event
message TransactionEvent {
  Transaction transaction = 1;
  string event_type = 2;
  google.protobuf.Timestamp event_time = 3;
}

// HealthRequest for health checks
message HealthRequest {}

// HealthResponse for health status
message HealthResponse {
  string status = 1;
  google.protobuf.Timestamp timestamp = 2;
  map<string, string> details = 3;
}

// MeteoraPoolInfo represents information about a Meteora pool
message MeteoraPoolInfo {
  string pool_address = 1;
  string token_a_mint = 2;
  string token_b_mint = 3;
  string token_a_symbol = 4;
  string token_b_symbol = 5;
  string token_a_name = 6;
  string token_b_name = 7;
  int32 token_a_decimals = 8;
  int32 token_b_decimals = 9;
  string creator_wallet = 10;
  string pool_type = 11;
  uint64 fee_rate = 12;
  google.protobuf.Timestamp created_at = 13;
  string transaction_hash = 14;
  uint64 slot = 15;
  map<string, string> metadata = 16;
}

// MeteoraEvent represents a Meteora pool event
message MeteoraEvent {
  string event_type = 1;
  MeteoraPoolInfo pool_info = 2;
  uint64 initial_liquidity_a = 3;
  uint64 initial_liquidity_b = 4;
  google.protobuf.Timestamp event_time = 5;
  string signature = 6;
}

// ProcessMeteoraEventRequest is sent by the scanner to process Meteora events
message ProcessMeteoraEventRequest {
  MeteoraEvent meteora_event = 1;
  string scanner_id = 2;
}

// ProcessMeteoraEventResponse is the response from processing a Meteora event
message ProcessMeteoraEventResponse {
  bool success = 1;
  string message = 2;
  string event_id = 3;
}

// GetMeteoraPoolHistoryRequest requests historical Meteora pool data
message GetMeteoraPoolHistoryRequest {
  string token_a_mint = 1;
  string token_b_mint = 2;
  string creator_wallet = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
  int32 limit = 6;
  string cursor = 7;
}

// GetMeteoraPoolHistoryResponse returns historical Meteora pool data
message GetMeteoraPoolHistoryResponse {
  repeated MeteoraPoolInfo pools = 1;
  string next_cursor = 2;
  bool has_more = 3;
}
